"use server";

import { auth } from "@clerk/nextjs";
import { revalidatePath } from "next/cache";

// In-memory storage for challenge progress
let challengeProgressStore: { [key: string]: any } = {};

export const upsertChallengeProgress = async (challengeId: string, completed: boolean) => {
  const { userId } = await auth();

  if (!userId) {
    throw new Error("Unauthorized"); 
  }

  const progress = {
    userId,
    challengeId,
    completed,
    createdAt: new Date().toISOString(),
  };

  const key = `${userId}-${challengeId}`;
  challengeProgressStore[key] = progress;

  revalidatePath("/learn");
  revalidatePath("/learn/lesson");
  revalidatePath("/quests");
  
  return { success: true };
};

export const getChallengeProgress = async (challengeId: string) => {
  const { userId } = await auth();

  if (!userId) {
    throw new Error("Unauthorized");
  }

  const key = `${userId}-${challengeId}`;
  return challengeProgressStore[key] || null;
};
